import java.io.IOException;
import java.util.Map;
import java.io.*;  

/**
 * This class accomplishes Mission Firewall
 */
public class MalwareScanner {

    private final Map<String, Malware> malwareDB;

    public MalwareScanner(Map<String, Malware> malwareDB) {
        this.malwareDB = malwareDB;
    }

    /**
     * TODO: Open and read the input file while searching for threats
     * TODO: Write results to both; a new file name "scanLog.txt" and to the console
     *
     * @param filename the input file
     * @throws IOException the io exception
     */
    public void scanFile(String filename) throws IOException {
        // TODO: YOUR CODE HERE
        try{  
            File file=new File(filename);   
            FileReader fr=new FileReader(file);  
            BufferedReader br=new BufferedReader(fr); 
            String line;  
            String mlwr = "";
            int malwareCount = 0;
            int counter = 1;

            while((line=br.readLine())!=null)  {  

                String hash = turbo64(line);
                //System.out.println(line);
                //System.out.println(hash);
                //if(counter==14){System.out.println(hash);}
                if(malwareDB.containsKey(hash)){
                    System.out.println(malwareDB.get(hash));
                    Util.printlnDash();
                    mlwr+= hash  + "@" + counter +"\n";
                    malwareCount++;
                }
                counter++;
            }  
            fr.close();   

            System.out.println("Scan complete! "+ malwareCount+" threats are found and eliminated. Generating log file...");
            BufferedWriter writer = new BufferedWriter(new FileWriter("scanLog.txt"));
            writer.write(mlwr.substring(0, mlwr.length() - 1));
            writer.close();
        }  
        catch(IOException e){  
            e.printStackTrace();  
        }  
    }

    public static String turbo64(String in) {
        // Implement turbo64 algorithm given by the assignment instructions
        // TODO: YOUR CODE HERE
        long MOD_TURBO = 4294967291L;
        long a = 0;
        long b = 1;
        for (int i = 0; i < in.length(); i++) {
            a = ((a + Integer.valueOf(in.charAt(i))) % MOD_TURBO);
            b = ((a + b) % MOD_TURBO);
        }

        return Long.toHexString((b << 32) | a);
    }
}
